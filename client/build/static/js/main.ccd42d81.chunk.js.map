{"version":3,"sources":["components/layout/spinner.gif","utils/setAuthToken.js","actions/alert.js","actions/types.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","actions/profile.js","components/layout/Spinner.js","components/dashboard/Dashboardactions.js","components/dashboard/Education.js","components/dashboard/Experience.js","components/dashboard/Dashboard.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/routing/PrivateRoute.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAuthToken","token","axios","defaults","headers","common","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","loadUser","a","localStorage","get","res","data","Navbar","auth","isAuthenticated","loading","logout","authLinks","to","onClick","className","guestLinks","protoTypes","PropTypes","func","isRequired","object","connect","state","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","required","minLength","login","alerts","alert","length","map","key","getCurrentProfile","statusText","status","createProfile","FormData","history","edit","push","src","spinner","style","width","margin","display","alt","Dashboardactions","deleteEducation","delete","education","educations","edu","_id","school","degree","format","form","deleteExperience","experience","experiences","exp","company","title","profile","deleteAccount","window","confirm","user","useEffect","Spinner","color","addExperience","put","withRouter","location","from","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","href","addEducation","fieldofstudy","ProfileItem","avatar","skills","slice","skill","index","getProfiles","profiles","ProfileTop","website","social","rel","twitter","facebook","linkedin","youtube","instagram","ProfileAbout","bio","trim","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","githubusername","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","Component","component","rest","render","props","displaySocialInputs","toggleSocialInput","class","Routes","exact","path","Soul","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","addEventListener","Landing","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ccd42d81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.f6bde978.gif\";","import axios from 'axios';\n\nconst setAuthToken = token=>{\n    if (token){\n        axios.defaults.headers.common['x-auth-token']=token;\n    }\n    else{\n        delete axios.defaults.headers.common['x-auth-token']\n    }\n}\nexport default setAuthToken;","import uuid from 'uuid/v4'\nimport {SET_ALERT, REMOVE_ALERT} from \"./types\";\n\n export const setAlert=(msg,alertType,timeout=5000)=>dispatch=>{\n    const id=uuid;\n    dispatch({\n        type:SET_ALERT,\n        payload: {msg,alertType,id}\n    });\n\n    setTimeout(()=>dispatch({type: REMOVE_ALERT,payload:id}),timeout);\n};\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const GET_REPOS = 'GET_REPOS';\nexport const NO_REPOS = 'NO_REPOS';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const POST_ERROR = 'POST_ERROR';\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\nexport const DELETE_POST = 'DELETE_POST';\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport {setAlert } from \"./alert\";\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_PROFILE\n} from \"./types\";\n\n\n\n//load user \nexport const loadUser = () => async dispatch =>{\n    if(localStorage.token){\n        setAuthToken(localStorage.token);\n    }\n    try {\n        const res= await axios.get(\"/api/auth\");\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        });\n    } catch (error) {\n        dispatch({\n            type:AUTH_ERROR\n        })        \n    }\n}\n\n//register user \n\nexport const register=({name,email,password})=> async dispatch=>{\n    const config= {\n        headers:{\n            \"Content-Type\": \"application/json\"\n        }\n    }\n    const body=JSON.stringify({name,email,password});\n    try {\n        const res= await axios.post(\"/api/users\",body,config);\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n    } catch (error) {\n        const errors=error.response.data.errors;\n        if(errors){\n            errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")));\n        }\n        dispatch({\n            type: REGISTER_FAIL\n        });\n    }\n}\n\n//login user\nexport const login=(email,password)=> async dispatch=>{\n    const config= {\n        headers:{\n            \"Content-Type\": \"application/json\"\n        }\n    }\n    const body=JSON.stringify({email,password});\n    try {\n        const res= await axios.post(\"/api/auth\",body,config);\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n    } catch (error) {\n        const errors=error.response.data.errors;\n        if(errors){\n            errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")));\n        }\n        dispatch({\n            type: LOGIN_FAIL\n        });\n    }\n}\n//log out /clear profile\n\nexport const logout = () => dispatch=>{\n    dispatch({type: CLEAR_PROFILE});\n    dispatch({type: LOGOUT});\n\n}","import React, { Fragment } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport PropTypes from \"prop-types\"\nimport { logout } from \"../../actions/auth\"\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <ul>\n    {/* <li><Link to=\"/profiles\">\n        Developers\n      </Link></li> */}\n      <li><Link to=\"/posts\">\n        Posts\n      </Link></li>\n   \n\n      {/* <li><Link to=\"/dashboard\">\n      <i className=\"fas fa-user\"></i>{' '}\n       <span className=\"hide-sm\">Dashboard</span>\n      </Link></li> */}\n    \n      {/* <li><Link to=\"/Soul\">\n        Soul \n      </Link></li> */}\n      <li><Link onClick={logout} to=\"#!\"> \n      <i className=\"fas fa-sign-out-alt\"></i>{' '}\n      <span className=\"hide-sm\">Logout</span></Link></li>\n    </ul>\n  )\n\n  const guestLinks = (\n    <ul >\n     {/* <li><Link to=\"/profiles\">\n        Developers\n      </Link></li> */}\n      {/* <li><Link to=\"/Soul\">\n        Soul \n      </Link></li> */}\n     \n     <li><Link to=\"/register\" >Register</Link></li>\n      <li><Link to=\"/login\">Login</Link></li>\n    </ul>\n  )\n  return (\n    <nav className=\"navbar bg-dark \">\n      <h1 className=\"hpad\">\n      {/* </> Logo Dwesign */}\n      {/* <i className=\"fas fa-code\"></i> */}\n        <Link to=\"/\"> HOME\n        </Link>\n        \n      </h1>\n      {!loading && (<Fragment> {isAuthenticated ? authLinks: guestLinks}</Fragment>)}\n    </nav>\n  )\n}\nNavbar.protoTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateProps = state => ({\n  auth: state.auth\n})\nexport default connect(mapStateProps, { logout })(Navbar)","import React from 'react'\nimport {Link, Redirect} from \"react-router-dom\"\nimport {connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nexport const Landing = ({isAuthenticated}) => {\n    if(isAuthenticated){\n      return  <Redirect to =\"/dashboard\"/>\n    }\n    return (\n        <section className=\"landing\">\n            <div className=\"dark-overlay\">\n                <div className=\"landing-inner\">\n                <div className=\"in\">\n                    <h1 className=\"x-large\">THE SOCIAL MEDIA APP</h1>\n                    <p className=\"lead\">\n                        Making the world more social and connecting people with each other\n          </p>\n                    <div className=\"buttons\">\n                        <Link to=\"/register\" className=\"btn btn-danger\">Register</Link>\n                        <Link to=\"/login\" className=\"btn btn-dark\">Login</Link>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    //     <div className=\"login\">\n    //   <div className=\"login__container\">\n    //     <div className=\"login__logo\">\n    //       <img\n    //         src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Quora_logo_2015.svg/250px-Quora_logo_2015.svg.png\"\n    //         alt=\"\"\n    //       />\n    //     </div>\n    //     <div className=\"login__desc\">\n    //       <p>A Place to Share knowledge and better understand the world</p>\n    //       <p style={{ color: \"royalblue\", fontSize: \"25px\" }}>\n    //         HandCrafted with ❤️ by{\" \"}\n    //       </p>\n    //       <h3>Code With Akky</h3>\n    //     </div>\n    //     <div className=\"login__auth\">\n    //       <div className=\"login__authOptions\">\n    //         <div className=\"login__authOption\">\n    //           <img\n    //             className=\"login__googleAuth\"\n    //             src=\"https://media-public.canva.com/MADnBiAubGA/3/screen.svg\"\n    //             alt=\"\"\n    //           />\n    //           <p>Continue With Google</p>\n    //         </div>\n    //         <div className=\"login__authOption\">\n    //           <img\n    //             className=\"login__googleAuth\"\n    //             src=\"https://1000logos.net/wp-content/uploads/2016/11/Facebook-logo-500x350.png\"\n    //             alt=\"\"\n    //           />\n    //           <span>Continue With Facebook</span>\n    //         </div>\n    //         <div className=\"login__authDesc\">\n    //           <p>\n    //             <span style={{ color: \"blue\", cursor: \"pointer\" }}>\n    //               Sign Up With Email\n    //             </span>\n    //             . By continuing you indicate that you have read and agree to\n    //             Quora's\n    //             <span style={{ color: \"blue\", cursor: \"pointer\" }}>\n    //               Terms of Service{\" \"}\n    //             </span>\n    //             and{\" \"}\n    //             <span style={{ color: \"blue\", cursor: \"pointer\" }}>\n    //               Privacy Policy\n    //             </span>\n    //             .\n    //           </p>\n    //         </div>\n    //       </div>\n    //       <div className=\"login__emailPass\">\n    //         <div className=\"login__label\">\n    //           <h4>Login</h4>\n    //         </div>\n    //         <div className=\"login__inputFields\">\n    //           <div className=\"login__inputField\">\n    //             <input\n                  \n    \n    //               type=\"text\"\n    //               placeholder=\"Email\"\n    //             />\n    //           </div>\n    //           <div className=\"login__inputField\">\n    //             <input\n                  \n                 \n    //               type=\"password\"\n    //               placeholder=\"Password\"\n    //             />\n    //           </div>\n    //         </div>\n    //         <div className=\"login__forgButt\">\n    //           <small>Forgot Password?</small>\n    //           <Link to=\"/login\" className=\"btn btn-dark\">Login</Link>\n    //         </div>\n    //         <Link to=\"/register\" className=\"btn btn-danger\">Register</Link>\n    //       </div>\n    //     </div>\n    //     <div className=\"login__lang\">\n    //       <p>हिन्दी</p>\n    //       {/* <ArrowForwardIosIcon fontSize=\"small\" /> */}\n    //     </div>\n    //     <div className=\"login__footer\">\n    //       <p>About</p>\n    //       <p>Languages</p>\n    //       <p>Careers</p>\n    //       <p>Businesses</p>\n    //       <p>Privacy</p>\n    //       <p>Terms</p>\n    //       <p>Contact</p>\n    //       <p>&copy; Quora Fake Inc. 2021</p>\n    //     </div>\n    //   </div>\n    // </div>\n    )\n}\nLanding.propTypes={\n    isAuthenticated: PropTypes.bool,\n\n}\n\nconst mapStateToProps= state=>({\n    isAuthenticated: state.auth.isAuthenticated,\n\n})\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Fragment, useState } from 'react'\n// import axios from \"axios\"\nimport {connect} from \"react-redux\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {setAlert} from \"../../actions/alert\";\nimport {register} from \"../../actions/auth\";\nimport PropTypes from 'prop-types';\n\nconst Register = ({setAlert, register, isAuthenticated}) => {\n    const [formData, setFormData] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\"\n    });\n\n    const { name, email, password, password2 } = formData;\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n    const onSubmit= async  e=>{\n        e.preventDefault();\n        if(password!==password2){\n            setAlert(\"Password donot match\",\"danger\");\n        }\n         else{\n             register({name,email,password});\n       \n        }\n    };\n    if(isAuthenticated){\n        return <Redirect to=\"/dashboard\" />\n    }\n    return (\n        <Fragment>\n            <h1 className=\"large text-gr\">Sign Up</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n            <form className=\"form\" onSubmit={e=>onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"text\"\n                        placeholder=\"Name\"\n                        name=\"name\"\n                        value={name}\n                        onChange={e => onChange(e)}\n                        required />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email}\n                        onChange={e => onChange(e)}\n                        required />\n                    <small className=\"form-text\"\n                    >This site uses Gravatar so if you want a profile image, use a\n            Gravatar email</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        minLength=\"6\"\n                        value={password}\n                        onChange={e=>onChange(e)}\n\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"password2\"\n                        minLength=\"6\"\n                        value={password2}\n                        onChange={e=>onChange(e)}\n\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n            </form>\n            <Link to =\"/login\" className=\"already\">\n             Already have an account? Sign In\n            </Link>\n\n        </Fragment>\n    )\n}\n\nRegister.propTypes={\n    setAlert:PropTypes.func.isRequired,\n    register:PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps=state=>({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps,{setAlert,register})(Register);\n","import React, { Fragment, useState } from 'react'\n// import axios from \"axios\"\nimport {Link, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {login} from \"../../actions/auth\"\nconst Login = ({login, isAuthenticated}) => {\n    const [formData, setFormData] = useState({\n        email: \"\",\n        password: \"\",\n\n    });\n\n    const { email, password } = formData;\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n    const onSubmit = async e => {\n        e.preventDefault();\n        login(email,password);\n    }\n    //redirect if logged in \n    if(isAuthenticated){\n        return <Redirect to =\"/dashboard\" />\n    }\n    return (\n        <Fragment>\n            <h1 className=\"large text-gr\">Sign In</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email}\n                        onChange={e => onChange(e)}\n                        required />\n                    <div className=\"form-group\">\n                        <input\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            name=\"password\"\n                            minLength=\"6\"\n                            value={password}\n                            onChange={e => onChange(e)}\n\n                        />\n                    </div>\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n            <Link to =\"/register\" className=\"already\"> Don't have an account? Sign Up</Link>\n              \n\n        </Fragment>\n    )\n}\nLogin.propTypes={\n    login:PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps=state=>({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps,{login})(Login)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from \"react-redux\";\nconst Alert = ({alerts}) => alerts !== null && alerts.length >0 && alerts.map(alert=>(\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n        {alert.msg}\n    </div>\n));\n\nAlert.propTypes = {\nalerts: PropTypes.array.isRequired\n}\n\nconst mapStateToProps=state=>({\n    alerts:state.alert\n})\n\nexport default connect(mapStateToProps)(Alert);","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n    GET_PROFILE,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n    ACCOUNT_DELETED,\n    CLEAR_PROFILE,\n    GET_PROFILES,\n    GET_REPOS\n} from \"./types\";\n\n//get current user profile\n\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await axios.get(\"/api/profile/me\")\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n//get all profiles\n\nexport const getProfiles = () => async dispatch => {\n    dispatch({type:CLEAR_PROFILE});\n    try {\n        const res = await axios.get(\"/api/profile\")\n        dispatch({\n            type: GET_PROFILES,\n            payload: res.data\n        });\n    } catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n\n//get profile by id\n\nexport const getProfileById= userId => async dispatch => {\n    try {\n        const res = await axios.get(`/api/profile/user/${userId}`)\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n\n//get github repos\n\nexport const getGithubRepos = username => async dispatch => {\n    try {\n        const res = await axios.get(`/api/profile/github/${username}`);\n        dispatch({\n            type: GET_REPOS,\n            payload: res.data\n        });\n    } catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n\n\n//create or update profile\n\nexport const createProfile = (FormData, history, edit = false) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }\n        const res = await axios.post(\"/api/profile\", FormData, config);\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n        dispatch(setAlert(edit ? \"Profile Updated\" :  \"Profile Created\",\"success\"))\n        if (!edit) {\n            history.push(\"/dashboard\");\n        }\n\n    } catch (error) {\n        const errors = error.response.data.errors;\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n\n//add experience\n\nexport const addExperience=(FormData,history) => async dispatch =>{\n    try {\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }\n        const res = await axios.put(\"/api/profile/experience\", FormData, config);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n        dispatch(setAlert(\"Experience Added\",\"success\"))\n        \n            history.push(\"/dashboard\");\n        \n    } catch (error) {\n        const errors = error.response.data.errors;\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n\n//add education\n\nexport const addEducation=(FormData,history)=> async dispatch =>{\n    try {\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }\n        const res = await axios.put(\"/api/profile/education\", FormData, config);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n        dispatch(setAlert(\"Education Added\",\"success\"))\n        \n            history.push(\"/dashboard\");\n        \n    } catch (error) {\n        const errors = error.response.data.errors;\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n\n//delete experience\n\nexport const deleteExperience=id=>async dispatch =>{\n    try {\n        const res = await axios.delete(`/profile/experience/${id}`);\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        });\n        dispatch(setAlert(\"Experience Removed\",\"success\"))\n   \n    } catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n//delete education\nexport const deleteEducation=id=>async dispatch =>{\n    try {\n        const res = await axios.delete(`/profile/education/${id}`);\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        });\n        dispatch(setAlert(\"Education Removed\",\"success\"))\n   \n    } catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n\n//delete account and profile\nexport const deleteAccount=()=>async dispatch =>{\n    if(window.confirm(\"Are you sure? This can't be undone!\")){\n        try {\n             await axios.delete(\"/api/profile\")\n            dispatch({\n                type:CLEAR_PROFILE\n            });\n            dispatch({\n                type:ACCOUNT_DELETED\n            });\n            dispatch(setAlert(\"Your account has been deleted\"))\n       \n        } catch (error) {\n            dispatch({\n                type: PROFILE_ERROR,\n                payload: { msg: error.response.statusText, status: error.response.status }\n            });\n\n        }\n    \n    }\n   }","import React, {Fragment} from \"react\";\nimport spinner from \"./spinner.gif\";\n\nexport default () =>(\n    <Fragment>\n        <img\n        src={spinner}\n        style={{width: \"200px\", margin:\"auto\",display:\"block\"}}\n        alt=\"Loading..\"/>\n    </Fragment>\n)","import React from 'react'\nimport {Link } from \"react-router-dom\"\nexport const Dashboardactions = () => {\n    return (\n        <div>\n           <div className=\"dash-buttons\">\n        <Link to=\"/edit-profile\" className=\"btn btn-light\"\n          ><i className=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link\n        >\n        <Link to=\"/add-experience\" className=\"btn btn-light\"\n          ><i className=\"fab fa-black-tie text-primary\"></i> Add Experience</Link\n        >\n        <Link to=\"/add-education\" className=\"btn btn-light\"\n          ><i className=\"fas fa-graduation-cap text-primary\"></i> Add Education</Link\n        >\n         <Link to=\"/posts\" className=\"btn btn-light\"\n          ><i className=\"fas fa-graduation-cap text-primary\"></i> Add Post</Link\n        >\n      </div>\n  \n        </div>\n    )\n}\n\nexport default (Dashboardactions)\n","import React, {Fragment} from 'react'\nimport Moment from \"react-moment\"\nimport {connect} from \"react-redux\"\nimport PropTypes from 'prop-types'\nimport {deleteEducation} from \"../../actions/profile\"\n\nconst Education =   ({education, deleteEducation}) => {\n  const educations=education.map(edu=>(\n      <tr key={edu._id}>\n          <td>{edu.school}</td>\n          <td className=\"hide-sm\">{edu.degree}</td>\n          <td>\n              <Moment format=\"YYYY/MM/DD\">{edu.form}</Moment> -{}\n              {edu.to ===null ? (\" Now\") :(<Moment format=\"YYYY/MM/DD\">{edu.to}</Moment>)\n              }\n          </td>\n          <td>\n              <button onClick={()=>deleteEducation(edu._id)} className=\"btn btn-danger\">Delete</button>\n          </td>\n      </tr>\n  ));\n    return (\n        <Fragment>\n            <h2 className=\"my-2\">Education Credentials</h2>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            School\n                        </th>\n                        <th className=\"hide-sm\">Degree</th>\n                        <th className=\"hide-sm\">Years</th>\n                        <th />\n\n                    </tr>\n                </thead>\n                <tbody>{educations}</tbody>\n            </table>\n        </Fragment>\n    )\n}\n\nEducation.propTypes = {\neducation: PropTypes.array.isRequired,\ndeleteEducation:PropTypes.func.isRequired\n}\n\nexport default connect(null,{deleteEducation})(Education)\n","import React, {Fragment} from 'react'\nimport Moment from \"react-moment\"\nimport {connect} from \"react-redux\"\nimport PropTypes from 'prop-types'\nimport {deleteExperience} from \"../../actions/profile\"\n\nconst Experience = ({experience,deleteExperience}) => {\n  const experiences=experience.map(exp=>(\n      <tr key={exp._id}>\n          <td>{exp.company}</td>\n          <td className=\"hide-sm\">{exp.title}</td>\n          <td>\n              <Moment format=\"YYYY/MM/DD\">{exp.form}</Moment> -{}\n              {exp.to ===null ? (\" Now\") :(<Moment format=\"YYYY/MM/DD\">{exp.to}</Moment>)\n              }\n          </td>\n          <td>\n              <button onClick={()=>deleteExperience(exp._id)} className=\"btn btn-danger\">Delete</button>\n          </td>\n      </tr>\n  ));\n    return (\n        <Fragment>\n            <h2 className=\"my-2\">Experience Credentials</h2>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            Company\n                        </th>\n                        <th className=\"hide-sm\">Title</th>\n                        <th className=\"hide-sm\">Years</th>\n                        <th />\n\n                    </tr>\n                </thead>\n                <tbody>{experiences}</tbody>\n            </table>\n        </Fragment>\n    )\n}\n\nExperience.propTypes = {\nexperience: PropTypes.array.isRequired,\ndeleteExperience: PropTypes.func.isRequired\n}\n\nexport default connect(null,{deleteExperience})(Experience)\n","import React,{Fragment,useEffect} from 'react'\nimport {Link} from \"react-router-dom\"\nimport PropTypes from 'prop-types'\nimport {connect} from \"react-redux\"\nimport {deleteAccount, getCurrentProfile} from \"../../actions/profile\"\nimport Spinner from \"../layout/Spinner\";\nimport DashboardActions from \"./Dashboardactions\";\nimport Education from \"./Education\"\nimport Experience from \"./Experience\"\nconst Dashboard = ({getCurrentProfile,deleteAccount,auth:{user},profile:{profile,loading}}) => {\n   useEffect(()=>{\n       getCurrentProfile();\n   },[getCurrentProfile]);\n    \n    return loading && profile == null ? <Spinner /> : <Fragment>\n    <h1 className=\" large text-primary \" style={{color: 'black'}}>Dashboard</h1>\n    {/* <p className=\"lead\">\n       \n    </p> */}\n    {profile!==null ? <Fragment>\n        <DashboardActions/>\n        <Experience experience={profile.experience}/>\n        <Education education={profile.education}/>\n        <div className=\"my-2\">\n            <button className=\"btn btn-danger\" onClick={()=>deleteAccount()}>\n                <i className=\"fas fa-user-minus\"></i> Delete My Account\n            </button>\n            <button className=\"btn btn-danger\" onClick={()=>deleteAccount()}>\n                <i className=\"fas fa-user-minus\"></i> Create Posts\n            </button>\n        </div>\n\n    </Fragment> : <Fragment>You have not yet setup your profile ,please add some information <br></br>\n    <Link to =\"/create-profile\" className=\"btn btn-primary my-1\">\nCreate Profile\n    </Link>\n    </Fragment>}\n    </Fragment>\n};\n\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    deleteAccount: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps=state =>({\n    auth: state.auth,\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps,{getCurrentProfile, deleteAccount})(Dashboard)\n","import React, { Fragment, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from \"react-redux\"\n\nimport { addExperience } from \"../../actions/profile\";\nimport PropTypes from 'prop-types'\n\nconst AddExperience = ({ addExperience, history }) => {\n    const [formData, setFormData] = useState({\n        company: \"\",\n        title: \"\",\n        location: \"\",\n        from: \"\",\n        to: \"\",\n        current: false,\n        description: \"\"\n    });\n    const [toDateDisabled, toggleDisabled] = useState(false);\n    const { company, title, location, from, to, current, description } = formData;\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Add An Experience\n      </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e => {\n                e.preventDefault();\n                addExperience(formData, history);\n            }}\n            >\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value={title} onChange={e => onChange(e)} required />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Company\" name=\"company\" value={company} onChange={e => onChange(e)} required />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                    <h4>From Date</h4>\n                    <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                    <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\n                        setFormData({ ...formData, current: !current });\n                        toggleDisabled(!toDateDisabled);\n                    }} /> {' '} Current Job</p>\n                </div>\n                <div className=\"form-group\">\n                    <h4>To Date</h4>\n                    <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? \"disabled\" : \"\"} />\n                </div>\n                <div className=\"form-group\">\n                    <textarea\n                        name=\"description\"\n                        cols=\"30\"\n                        rows=\"5\"\n                        placeholder=\"Job Description\"\n                        value={description} onChange={e => onChange(e)}\n                    ></textarea>\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\n            </form>\n\n        </Fragment>\n    )\n}\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addExperience })(withRouter(AddExperience))\n","import React, { Fragment, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from \"react-redux\"\n\nimport { addEducation } from \"../../actions/profile\";\nimport PropTypes from 'prop-types'\n\nconst AddEducation = ({ addEducation, history }) => {\n    const [formData, setFormData] = useState({\n        school: \"\",\n        degree: \"\",\n        fieldofstudy: \"\",\n        from: \"\",\n        to: \"\",\n        current: false,\n        description: \"\"\n    });\n    const [toDateDisabled, toggleDisabled] = useState(false);\n    const { school, degree, fieldofstudy, from, to, current, description } = formData;\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Add Your Education\n      </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-code-branch\"></i> Add any school or bootcamp that you have attended\n      </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e => {\n                e.preventDefault();\n                addEducation(formData, history);\n            }}\n            >\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* School or Bootcamp\" name=\"school\" value={school} onChange={e => onChange(e)} required />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Degree/Certificate\" name=\"degree\" value={degree} onChange={e => onChange(e)} required />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Field of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                    <h4>From Date</h4>\n                    <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                    <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\n                        setFormData({ ...formData, current: !current });\n                        toggleDisabled(!toDateDisabled);\n                    }} /> {' '} Current School</p>\n                </div>\n                <div className=\"form-group\">\n                    <h4>To Date</h4>\n                    <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? \"disabled\" : \"\"} />\n                </div>\n                <div className=\"form-group\">\n                    <textarea\n                        name=\"description\"\n                        cols=\"30\"\n                        rows=\"5\"\n                        placeholder=\"Program Description\"\n                        value={description} onChange={e => onChange(e)}\n                    ></textarea>\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\n            </form>\n\n        </Fragment>\n    )\n}\n\nAddEducation.propTypes = {\n    addEducation: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addEducation })(withRouter(AddEducation));\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\"\n\nconst ProfileItem = ({\n    profile:{\n    user:{_id,name,avatar},\n    status,\n    company,\n    location,\n    skills\n}\n}) => {\n    return (\n        <div className=\"profile bg-dark\">\n        <img src={avatar} alt=\"\"className=\"round-img\"></img>\n        <div>\n        <h2>{name}</h2>\n        <p>{status} {company && <span> at {company}</span>}</p>\n        <p className=\"my-1\">{location && <span>{location}</span>}</p>\n        <Link to={`/profile/${_id}`} className=\"btn btn-success\">\n        View Profile\n        </Link>\n        </div>\n        <ul>\n            {skills.slice(0,4).map((skill,index)=>(\n                <li key={index} className=\"text-primary\">\n                    <i className=\"fas fa-check\"></i> {skill}\n                </li>\n            ))}\n        </ul>\n        </div>\n    )\n}\n\nProfileItem.propTypes = {\nprofile:PropTypes.object.isRequired,\n}\n\nexport default ProfileItem\n","import React, { Fragment, useEffect } from 'react'\nimport Spinner from \"../layout/Spinner\";\nimport ProfileItem from \"./ProfileItem\";\nimport { getProfiles } from \"../../actions/profile\";\nimport {  connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n\n\n    useEffect(() => {\n        getProfiles()\n    }, [getProfiles]);\n    return (\n        <Fragment>\n            {loading ? <Spinner /> : <Fragment>\n                <h1 className=\"large text-custom\">Developer</h1>\n                <p className=\"lead\">\n                    <i className=\"fab fa-connectdevelop\"></i> Browse and connect with developers\n                </p>\n                <div className=\"profiles\">\n                    {profiles.length > 0 ? (\n                        profiles.map(profile => (\n                            <ProfileItem key={profile._id} profile={profile} />\n                        ))\n                    ) : <h4> No profile found...</h4>}\n                </div>\n            </Fragment>}\n        </Fragment>\n\n    )\n}\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ProfileTop = ({ profile: {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user:\n    { name, avatar }\n} }) => {\n    return (\n        <div className=\"profile-top bg-dark p-2\">\n            <img\n                className=\"round-img my-1\"\n                src={avatar}\n                alt=\"\"\n            />\n            <h1 className=\"large\">{name}</h1>\n            <p className=\"lead\">{status}{company && <span> at  {company}</span>}</p>\n            <p>{location && <span> at {location}</span>}</p>\n            <div className=\"icons my-1\">\n                {\n                    website && (\n                        <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <i className=\"fas fa-globe fa-2x\"></i>\n                        </a>\n                    )\n\n                }\n\n                {social && social.twitter && (\n                    <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-twitter fa-2x\"></i>\n                    </a>\n                )}\n                {social && social.facebook && (\n                    <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                    </a>\n                )}\n                {social && social.linkedin && (\n                    <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\n                    </a>\n                )}\n                {social && social.youtube && (\n                    <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-youtube fa-2x\"></i>\n                    </a>\n                )}\n                {social && social.instagram && (\n                    <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-instagram fa-2x\"></i>\n                    </a>\n                )}\n\n            </div>\n        </div>\n\n    )\n}\n\nProfileTop.propTypes = {\n    profile: PropTypes.object.isRequired\n}\n\nexport default ProfileTop\n","import React,{Fragment} from 'react'\nimport PropTypes from 'prop-types'\n\nconst ProfileAbout = ({profile:{\n    bio,\n    skills,\n    user:{name}\n}}) =>\n        <div className=\"profile-about bg-dark p-2\">\n        {bio && (\n            <Fragment>\n            <h2 className=\"text-primary\">{name.trim().split(\" \")[0]}'s Bio</h2>\n        <p>\n        {bio}\n        </p>\n        <div className=\"line\"></div>\n       \n            </Fragment>\n        )}\n        <h2 className=\"text-primary\">Skill Set</h2>\n        <div className=\"skills\">\n         {skills.map((skill,index)=>(\n             <div key={index} className=\"p-1\">\n                <i className=\"fas fa-check\"></i> {skill} \n             </div>\n         ))}\n        </div>\n      </div>\n    \n\n\nProfileAbout.propTypes = {\nprofile:PropTypes.object.isRequired\n}\n\nexport default ProfileAbout\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from \"react-moment\";\nconst ProfileExperience = ({experience:{\n    company,title,location,current,to,from,description\n}}) => {\n    return (\n        <div>\n            <h3 className=\"text-dark\">{company}</h3>\n            <p>\n                <Moment format=\"YYYY/MM/DD\">{from}</Moment> -{!to ? 'Now':<Moment format=\"YYYY/MM/DD\">{to}</Moment>}\n            </p>\n            <p>\n                <strong>Position:</strong>{title}\n            </p>\n            \n            <p>\n                <strong>Description:</strong>{description}\n            </p>\n            \n        </div>\n    )\n}\n\nProfileExperience.propTypes = {\nexperience: PropTypes.array.isRequired\n}\n\nexport default ProfileExperience\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from \"react-moment\";\nconst ProfileEducation = ({education:{\n    school,degree,fieldofstudy,current,to,from,description\n}}) => {\n    return (\n        <div>\n            <h3 className=\"text-dark\">{school}</h3>\n            <p>\n                <Moment format=\"YYYY/MM/DD\">{from}</Moment> -{!to ? 'Now':<Moment format=\"YYYY/MM/DD\">{to}</Moment>}\n            </p>\n            <p>\n                <strong>Degree:</strong>{degree}\n            </p>\n            <p>\n                <strong>Field Of Study:</strong>{fieldofstudy}\n            </p>\n            \n            <p>\n                <strong>Description:</strong>{description}\n            </p>\n            \n        </div>\n    )\n}\n\nProfileEducation.propTypes = {\neducation: PropTypes.object.isRequired\n}\n\nexport default ProfileEducation\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n\n  return (\n    <div className=\"profile-github\">\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\n      {repos.map(repo => (\n        <div key={repo.id} className=\"repo bg-dark p-1 my-1\">\n          <div>\n            <h4>\n              <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {repo.name}\n              </a>\n            </h4>\n            <p>{repo.description}</p>\n          </div>\n          <div>\n            <ul>\n              <li className=\"badge badge-primary\">\n                Stars: {repo.stargazers_count}\n              </li>\n              <li className=\"badge badge-dark\">\n                Watchers: {repo.watchers_count}\n              </li>\n              <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\n            </ul>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({ getProfileById, profile: { profile }, auth, match }) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  return (\n    <Fragment>\n      {profile === null ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to=\"/profiles\" className=\"btn btn-light\">\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                Edit Profile\n              </Link>\n            )}\n          <div className=\"profile-grid my-1\">\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className=\"profile-exp bg-white p-2\">\n              <h2 className=\"text-primary\">Experience</h2>\n              {profile.experience.length > 0 ? (\n                <Fragment>\n                  {profile.experience.map((experience) => (\n                    <ProfileExperience\n                      key={experience._id}\n                      experience={experience}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No experience credentials</h4>\n              )}\n            </div>\n\n            <div className=\"profile-edu bg-white p-2\">\n              <h2 className=\"text-primary\">Education</h2>\n              {profile.education.length > 0 ? (\n                <Fragment>\n                  {profile.education.map((education) => (\n                    <ProfileEducation\n                      key={education._id}\n                      education={education}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No education credentials</h4>\n              )}\n            </div>\n\n            {profile.githubusername && (\n              <ProfileGithub username={profile.githubusername} />\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile); ","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions\n}) => (\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='my-1'>{text}</p>\n      <p className='post-date'>\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n      </p>\n\n      {showActions && (\n        <Fragment>\n          <button\n            onClick={() => addLike(_id)}\n            type='button'\n            className='btn btn-light'\n          >\n            <i className='fas fa-thumbs-up' />{' '}\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n          </button>\n          <button\n            onClick={() => removeLike(_id)}\n            type='button'\n            className='btn btn-light'\n          >\n            <i className='fas fa-thumbs-down' />\n          </button>\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\n            Discussion{' '}\n            {comments.length > 0 && (\n              <span className='comment-count'>{comments.length}</span>\n            )}\n          </Link>\n          {!auth.loading && user === auth.user._id && (\n            <button\n              onClick={() => deletePost(_id)}\n              type='button'\n              className='btn btn-danger'\n            >\n              <i className='fas fa-times' />\n            </button>\n          )}\n        </Fragment>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.defaultProps = {\n  showActions: true\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { addLike, removeLike, deletePost }\n)(PostItem);","import axios from \"axios\";\nimport {setAlert} from \"./alert\";\nimport {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from \"./types\";\n\n// get posts\nexport const getPosts = () => async dispatch =>{\n    try {\n        const res= await axios.get(\"/api/posts\");\n        dispatch({\n            type:GET_POSTS,\n            payload: res.data\n        });\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n\n// Add like\nexport const addLike = id => async dispatch =>{\n    try {\n        const res= await axios.put(`/api/posts/like/${id}`);\n        dispatch({\n            type:UPDATE_LIKES,\n            payload: {id,likes:res.data}\n        });\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n\n// Remove like\nexport const removeLike = id => async dispatch =>{\n    try {\n        const res= await axios.put(`/api/posts/unlike/${id}`);\n        dispatch({\n            type:UPDATE_LIKES,\n            payload: {id,likes:res.data}\n        });\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n// DELETE POST\nexport const deletePost = id => async dispatch =>{\n    try {\n        await axios.delete(`/api/posts/${id}`);\n        dispatch({\n            type:DELETE_POST,\n            payload: id\n        });\n\n        dispatch(setAlert(\"Post Removed\",\"success\"));\n\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n// ADD POST\nexport const addPost = formData => async dispatch =>{\n    const config={\n        headers:{\n            \"Content-Type\": \"application/json\"\n        }\n    }\n    try {\n        const res=await axios.post(`/api/posts`,formData,config);\n        dispatch({\n            type:ADD_POST,\n            payload: res.data\n        });\n\n        dispatch(setAlert(\"Post Created\",\"success\"));\n\n    } catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n// Get post\nexport const getPost = id => async dispatch => {\n    try {\n      const res = await axios.get(`/api/posts/${id}`);\n  \n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n  \n  // Add comment\n  export const addComment = (postId, formData) => async dispatch => {\n    try {\n      const res = await axios.post(`/api/posts/comment/${postId}`, formData);\n  \n      dispatch({\n        type: ADD_COMMENT,\n        payload: res.data\n      });\n  \n      dispatch(setAlert('Comment Added', 'success'));\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n  \n  // Delete comment\n  export const deleteComment = (postId, commentId) => async dispatch => {\n    try {\n      await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n  \n      dispatch({\n        type: REMOVE_COMMENT,\n        payload: commentId\n      });\n  \n      dispatch(setAlert('Comment Removed', 'success'));\n    } catch (err) {\n      dispatch({\n        type: POST_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };","import React,{useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from \"react-redux\"\nimport {addPost} from \"../../actions/post\"\nconst PostForm = ({addPost}) => {\n    const [text,setText]= useState(\"\")\n    return (\n        <div>\n             <div className=\"post-form\">\n        <div className=\"bg-primary p\">\n          <h3>Say Something...</h3>\n        </div>\n        <form className=\"form my-1\" onSubmit={e=>{\n            e.preventDefault();\n            addPost({ text });\n            setText(\"\");\n        }}>\n          <textarea\n            name=\"text\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Post a Query ..\"\n            value={text}\n            onChange={e=>setText(e.target.value)}\n            required\n          ></textarea>\n          <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\n        </form>\n      </div>\n        </div>\n    )\n}\n\nPostForm.propTypes = {\naddPost:PropTypes.func.isRequired\n}\n\nexport default connect(null,{addPost})(PostForm)\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\nimport { getPosts } from '../../actions/post';\n\nconst Posts = ({ getPosts, post: { posts } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\"  style={{color: 'black'}}>Problems / Query</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\" /> Welcome to the hub\n      </p>\n      <PostForm />\n      <div className=\"posts\">\n        {posts.map((post) => (\n          <PostItem key={post._id} post={post} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addComment } from '../../actions/post';\n\nconst CommentForm = ({ postId, addComment }) => {\n  const [text, setText] = useState('');\n\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3>Leave a Comment</h3>\n      </div>\n      <form\n        className='form my-1'\n        onSubmit={e => {\n          e.preventDefault();\n          addComment(postId, { text });\n          setText('');\n        }}\n      >\n        <textarea\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Comment the post'\n          value={text}\n          onChange={e => setText(e.target.value)}\n          required\n        />\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addComment }\n)(CommentForm);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment\n}) => (\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='my-1'>{text}</p>\n      <p className='post-date'>\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n      </p>\n      {!auth.loading && user === auth.user._id && (\n        <button\n          onClick={() => deleteComment(postId, _id)}\n          type='button'\n          className='btn btn-danger'\n        >\n          <i className='fas fa-times' />\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { deleteComment }\n)(CommentItem);","import React,{Fragment,useEffect} from 'react'\nimport {connect} from \"react-redux\"\nimport {Link} from \"react-router-dom\"\nimport PropTypes from 'prop-types'\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\nimport Spinner from \"../layout/Spinner\"\nimport {getPost} from \"../../actions/post\"\nimport PostItem from '../posts/PostItem';\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n    useEffect(() => {\n      getPost(match.params.id);\n    }, [getPost, match.params.id]);\n\n    return loading || post === null ? (<Spinner />) : <Fragment>\n    <Link to =\"/posts\" className=\"btn \">\n        Back to Posts\n    </Link>\n        <PostItem post={post} showActions={false} />\n        <CommentForm postId={post._id} />\n        <div className=\"comments\">\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </Fragment>\n}\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = (state) => ({\n    post: state.post\n  });\n  \n  export default connect(mapStateToProps, { getPost })(Post);","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => (\n    <Route {...rest} \n        render={props => \n            !isAuthenticated && !loading ? \n                (<Redirect to=\"/login\" />\n                ) : (\n                    <Component{...props} />)} />\n)\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, withRouter} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {createProfile} from \"../../actions/profile\";\nconst CreateProfile = ({createProfile,history}) => {\n    const [formData, setFormData] = useState({\n        company: \"\",\n        website: \"\",\n        location: \"\",\n        status: \"\",\n        skills: \"\",\n        githubusername: \"\",\n        bio: \"\",\n        twitter: \"\",\n        facebook: \"\",\n        linkedin: \"\",\n        youtube: \"\",\n        instagram: \"\",\n    })\n    const [displaySocialInputs, toggleSocialInput] = useState(false);\n    const {\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram,\n    } = formData\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n    const onSubmit =e =>{\n        e.preventDefault();\n        createProfile(formData,history)\n    }\n    return (\n        <Fragment>\n            <h1 class=\"large text-primary\">\n                Create Your Profile\n      </h1>\n            <p class=\"lead\">\n                <i class=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e=>onSubmit(e)}>\n                <div className=\"form-group\">\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\n                        <option value=\"0\">* Select Professional Status</option>\n                        <option value=\"Developer\">Developer</option>\n                        <option value=\"Junior Developer\">Junior Developer</option>\n                        <option value=\"Senior Developer\">Senior Developer</option>\n                        <option value=\"Manager\">Manager</option>\n                        <option value=\"Student or Learning\">Student or Learning</option>\n                        <option value=\"Instructor\">Instructor or Teacher</option>\n                        <option value=\"Intern\">Intern</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                    <small class=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                    >\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >City & state suggested (eg. Boston, MA)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Github Username\"\n                        name=\"githubusername\"\n                        value={githubusername} onChange={e => onChange(e)}\n                    />\n                    <small className=\"form-text\"\n                    >If you want your latest repos and a Github link, include your\n            username</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\n                    <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                    <button onClick={() => toggleSocialInput(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n                        Add Social Network Links\n          </button>\n                    <span>Optional</span>\n                </div>\n                {\n                    displaySocialInputs && <Fragment>\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-twitter fa-2x\"></i>\n                            <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} />\n                        </div>\n\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-facebook fa-2x\"></i>\n                            <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} />\n                        </div>\n\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-youtube fa-2x\"></i>\n                            <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} />\n                        </div>\n\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-linkedin fa-2x\"></i>\n                            <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} />\n                        </div>\n\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-instagram fa-2x\"></i>\n                            <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\n                        </div>\n\n                    </Fragment>\n                }\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link  className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n\n        </Fragment>\n    )\n}\n\nCreateProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired\n}\n\nexport default connect(null,{createProfile})(withRouter(CreateProfile))\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, withRouter} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {createProfile, getCurrentProfile} from \"../../actions/profile\";\nconst EditProfile = ({profile:{profile,loading},createProfile,getCurrentProfile,history}) => {\n    const [formData, setFormData] = useState({\n        company: \"\",\n        website: \"\",\n        location: \"\",\n        status: \"\",\n        skills: \"\",\n        githubusername: \"\",\n        bio: \"\",\n        twitter: \"\",\n        facebook: \"\",\n        linkedin: \"\",\n        youtube: \"\",\n        instagram: \"\",\n    },[loading,getCurrentProfile])\n    const [displaySocialInputs, toggleSocialInput] = useState(false);\n    useEffect(()=>{\n        getCurrentProfile();\n        setFormData({\n            company:loading|| !profile.company ? \" \": profile.company,\n            website:loading|| !profile.website ? \" \": profile.website,\n            location:loading|| !profile.location ? \" \": profile.location,\n            status:loading|| !profile.status ? \" \": profile.status,\n            skills:loading|| !profile.skills ? \" \": profile.skills,\n            githubusername:loading|| !profile.githubusername ? \" \": profile.githubusername,\n            bio:loading|| !profile.bio ? \" \": profile.bio,\n            twitter:loading|| !profile.twitter ? \" \": profile.twitter,\n            facebook:loading|| !profile.facebook ? \" \": profile.facebook,\n            linkedin:loading|| !profile.linkedin ? \" \": profile.linkedin,\n            youtube:loading|| !profile.youtube ? \" \": profile.youtube,\n            instagram:loading|| !profile.instagram ? \" \": profile.instagram\n        });\n    },[loading,getCurrentProfile,profile.bio,profile.company,profile.website,profile.status,profile.twitter,profile.facebook ,profile.linkedin,profile.youtube ,profile.instagram,profile.githubusername,profile.skills,profile.location])\n\n    const {\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram,\n    } = formData\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n    const onSubmit =e =>{\n        e.preventDefault();\n        createProfile(formData,history,true)\n    }\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Create Your Profile\n      </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e=>onSubmit(e)}>\n                <div className=\"form-group\">\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\n                        <option value=\"0\">* Select Professional Status</option>\n                        <option value=\"Developer\">Developer</option>\n                        <option value=\"Junior Developer\">Junior Developer</option>\n                        <option value=\"Senior Developer\">Senior Developer</option>\n                        <option value=\"Manager\">Manager</option>\n                        <option value=\"Student or Learning\">Student or Learning</option>\n                        <option value=\"Instructor\">Instructor or Teacher</option>\n                        <option value=\"Intern\">Intern</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                    <small className=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >City & state suggested (eg. Boston, MA)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Github Username\"\n                        name=\"githubusername\"\n                        value={githubusername} onChange={e => onChange(e)}\n                    />\n                    <small className=\"form-text\"\n                    >If you want your latest repos and a Github link, include your\n            username</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\n                    <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                    <button onClick={() => toggleSocialInput(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n                        Add Social Network Links\n          </button>\n                    <span>Optional</span>\n                </div>\n                {\n                    displaySocialInputs && <Fragment>\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-twitter fa-2x\"></i>\n                            <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} />\n                        </div>\n\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-facebook fa-2x\"></i>\n                            <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} />\n                        </div>\n\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-youtube fa-2x\"></i>\n                            <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} />\n                        </div>\n\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-linkedin fa-2x\"></i>\n                            <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} />\n                        </div>\n\n                        <div className=\"form-group social-input\">\n                            <i className=\"fab fa-instagram fa-2x\"></i>\n                            <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\n                        </div>\n\n                    </Fragment>\n                }\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link  className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n\n        </Fragment>\n    )\n}\n\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n}\nconst mapStateToProps=state => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps,{createProfile,getCurrentProfile})(withRouter(EditProfile))\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Register from '../auth/Register';\nimport Login from '../auth/Login';\nimport Alert from '../layout/Alert';\nimport Dashboard from '../dashboard/Dashboard';\n\nimport AddExperience from '../profile-forms/AddExperience';\nimport AddEducation from '../profile-forms/AddEducation';\nimport Soul from '../profile-forms/Soul';\n\nimport Profiles from '../profiles/Profiles';\nimport Profile from '../profile/Profile';\nimport Posts from '../posts/Posts';\nimport Post from '../post/Post';\n\nimport PrivateRoute from '../routing/PrivateRoute';\nimport CreateProfile from \"../profile-forms/CreateProfile\";\nimport EditProfile from \"../profile-forms/EditProfile\";\n\n\nconst Routes = props => {\n  return (\n    <section className=\"container\">\n      <Alert />\n      <Switch>\n      <Route exact path=\"/soul\" component={Soul} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/profiles\" component={Profiles} />\n        <Route exact path=\"/profile/:id\" component={Profile} />\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n        <PrivateRoute exact path=\"/create-profile\" component={CreateProfile} />\n        <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\n        <PrivateRoute exact path=\"/add-experience\" component={AddExperience} />\n        <PrivateRoute exact path=\"/add-education\" component={AddEducation} />\n        <PrivateRoute exact path=\"/posts\" component={Posts} />\n        <PrivateRoute exact path=\"/posts/:id\" component={Post} />\n\n      </Switch>\n    </section>\n  );\n};\n\nexport default Routes;","import {SET_ALERT, REMOVE_ALERT} from \"../actions/types\";\nconst initialState=[];\n\nexport default function(state=initialState,action){\n    const {type,payload}=action;\n    switch(type){\n        case SET_ALERT:\n            return[...state,payload];\n        case REMOVE_ALERT:\n            return state.filter(alert=>alert.id!==payload);\n        default:\n            return state;\n    }\n\n}","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT, \n    ACCOUNT_DELETED\n} from \"../actions/types\";\n\nconst initialState={\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\nexport default function(state=initialState,action){\n    const {type, payload}=action;\n    switch(type){\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem(\"token\",payload.token);\n            return{\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n        case ACCOUNT_DELETED:\n            localStorage.removeItem(\"token\");\n            return{\n                ...state,\n                token:null,\n                isAuthenticated: false,\n                loading: false\n            }   \n        default:\n            return state;\n\n    }\n}","import { PROFILE_ERROR, GET_PROFILE, GET_PROFILES,CLEAR_PROFILE, UPDATE_PROFILE,GET_REPOS } from \"../actions/types\";\n\nconst initialState = {\n    profile: null,\n    profiles: [],\n    repos: [],\n    loading: true,\n    error: {}\n}\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state,\n                profile: payload,\n                loading: false\n            }\n        case GET_PROFILES:\n            return {\n                ...state,\n                profiles: payload,\n                loading: false\n            }\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            };\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                repos: [],\n                loading: false\n            }\n        case GET_REPOS:\n            return {\n                ...state,\n                repos: payload,\n                loading:false\n            }\n        default:\n            return state;\n    }\n}","import {\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n  } from '../actions/types';\n  \n  const initialState = {\n    posts: [],\n    post: null,\n    loading: true,\n    error: {}\n  };\n  \n  export default function(state = initialState, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case GET_POSTS:\n        return {\n          ...state,\n          posts: payload,\n          loading: false\n        };\n      case GET_POST:\n        return {\n          ...state,\n          post: payload,\n          loading: false\n        };\n      case ADD_POST:\n        return {\n          ...state,\n          posts: [payload, ...state.posts],\n          loading: false\n        };\n      case DELETE_POST:\n        return {\n          ...state,\n          posts: state.posts.filter(post => post._id !== payload),\n          loading: false\n        };\n      case POST_ERROR:\n        return {\n          ...state,\n          error: payload,\n          loading: false\n        };\n      case UPDATE_LIKES:\n        return {\n          ...state,\n          posts: state.posts.map(post =>\n            post._id === payload.id ? { ...post, likes: payload.likes } : post\n          ),\n          loading: false\n        };\n      case ADD_COMMENT:\n        return {\n          ...state,\n          post: { ...state.post, comments: payload },\n          loading: false\n        };\n      case REMOVE_COMMENT:\n        return {\n          ...state,\n          post: {\n            ...state.post,\n            comments: state.post.comments.filter(\n              comment => comment._id !== payload\n            )\n          },\n          loading: false\n        };\n      default:\n        return state;\n    }\n  }","import {combineReducers} from \"redux\";\nimport alert from \"./alert\";\nimport auth from \"./auth\";\nimport profile from \"./profile\";\nimport post from \"./post\";\nexport default combineReducers({\n    alert,\n    auth,\n    profile,\n    post\n});","import { createStore } from 'redux';\nimport { applyMiddleware } from 'redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst intialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer, \n    intialState, \n    composeWithDevTools(applyMiddleware(...middleware))\n    );\n\nexport default store;   ","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes';\nimport { LOGOUT } from './actions/types';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    // check for token in LS\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    store.dispatch(loadUser());\n\n    // log user out from all tabs if they log out in one tab\n    window.addEventListener('storage', () => {\n      if (!localStorage.token) store.dispatch({ type: LOGOUT });\n    });\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route component={Routes} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}